name: Issue Branch Push

on:
  push:
    branches:
      - feature/*
      - bugfix/*

jobs:
  FindIssue:
    runs-on: ubuntu-latest
    outputs:
      workflowLabel: ${{ steps.workflowLabel.outputs.WORKFLOW_LABEL }}
    steps:
      - name: find issue labels workflow
        id: workflowLabel
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "WORKFLOW_LABEL=$(gh issue view $(echo ${GITHUB_REF#refs/heads/} | cut -d'/' -f2) --json labels --jq '.labels|map(.name)|.[]|select(. == "workflow")')" >> $GITHUB_OUTPUT
  TestCoverage:
    runs-on: ubuntu-latest
    needs: FindIssue
    if: needs.FindIssue.outputs.workflowLabel != ''
    outputs:
      markdownReport: ${{ steps.coverage.outputs.markdownReport }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: v22.7.0
          cache: 'yarn'
      - run: yarn install --frozen-lockfile
      - run: yarn --silent test:cov --coverageReporters=text > coverage.txt
      - name: Prepare coverage report in markdown
        uses: fingerprintjs/action-coverage-report-md@v2
        id: coverage
        with:
          textReportPath: './coverage.txt'
  IssueComment:
    runs-on: ubuntu-latest
    needs: TestCoverage
    steps:
      - name: Add coverage report to the job summary
        run: |
          echo "## Code Coverage" >> $GITHUB_STEP_SUMMARY
          echo "${{ needs.TestCoverage.outputs.markdownReport }}" >> $GITHUB_STEP_SUMMARY
      - name: Create comment
        env:
          MARK_DOWN: ${{ needs.TestCoverage.outputs.markdownReport}}
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
        run: |
          gh issue comment "$(echo ${GITHUB_REF#refs/heads/} | cut -d'/' -f2)" --body "$MARK_DOWN"
